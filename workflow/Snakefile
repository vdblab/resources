import os
import sys

import pandas as pd

from pathlib import Path

include: "rules/indexing.smk"
include: "rules/16S.smk"
include: "rules/shotgun.smk"

refs = Path("references")
idxs = Path("indexes")
dbs = Path("dbs")
tax = Path("taxonomy")



MANIFEST = pd.read_csv(os.path.join(workflow.current_basedir, "references.txt"), sep=",").set_index("name", drop=False)
MANIFEST["base"]  =  MANIFEST.url.apply(lambda x: os.path.basename(x))



default_container = "docker://ghcr.io/vdblab/utility:0b"


ref_sequences =  expand(f"{refs}/{{org}}/{{name}}/{{base}}",  zip,
                  org=MANIFEST["org"], name=MANIFEST["name"], base=MANIFEST["base"])

all_minimap2_indexes =  expand(f"{idxs}/{{org}}/{{name}}/minimap2/{{base}}.mmi",  zip,
                               org=MANIFEST["org"], name=MANIFEST["name"], base=MANIFEST["base"])


all_snap_indexes =  expand(f"{idxs}/{{org}}/{{name}}/snap/{{name}}/Genome",  zip,
                               org=MANIFEST["org"], name=MANIFEST["name"], base=MANIFEST["base"])




all_input_vars = [x for x in locals() if x.startswith("all_")]



rule all:
    input:
        [eval(x) for x in all_input_vars],
        ref_sequences,
        [ v["dest"] for k,v in bowtie_prebuilts.items()],

rule get_refs:
    container: default_container
    output:
        f"{refs}/{{org}}/{{name}}/{{base}}",
    params:
        url=lambda wildcards: MANIFEST.loc[wildcards.name, "url"]
    shell:"""
    wget  {params.url} -O {output}
    """
